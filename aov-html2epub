#!/bin/bash

# Converts an HTML file to EPUB format
#
# Peter Buxton <somercet@gmail.com>
# Angel Ortega <angel@triptico.com>
# Shakna Israel <s4b3r6@gmail.com>
#
# Public domain

EPUB=""
TITLE=""
AUTHOR=""
FILEAS=""
COVER=""
HTML=""
CSS=""
TTF=""
IMAGE=""
LANG="en"
SUBJECT=""
CREATOR=""
TRANSLATOR=""
PUBLISHER=""
LICENSE="none"
UUID=""

usage () {
    cat << EOM >> /dev/stderr
Usage: $( basename $0 ) [EPUB FILE] [OPTION]... [FILE]...

Options:
 -t title            Title
 -a author           Author 'First Last'
 -f file-as          Author 'Last, First'
 -s subject          Subject(s)
 -p creator          Creator
 -p publisher        Publisher
 -T translator       If any
 -c cover.img        Cover image
 -l lang             Language (ISO 639, default "en")
 -L licence          Default "none"
 -u UUID             Universal Unique ID
EOM
}

# parse arguments
while [ $# -ne 0 ]
do
    case $1 in
    -t)         TITLE="$2"                      ; shift ;;
    -a)         AUTHOR="$2"                     ; shift ;;
    -f)         FILEAS="$2"                     ; shift ;;
    -c)         COVER="$2"                      ; shift ;;
    -l)         LANG="$2"                       ; shift ;;
    -s)         SUBJECT="$2"                    ; shift ;;
    -p)         CREATOR="$2"                    ; shift ;;
    -P)         PUBLISHER="$2"                  ; shift ;;
    -T)         TRANSLATOR="$2"                 ; shift ;;
    -u)         UUID="$2"                       ; shift ;;
    -L)         LICENSE="$2"                    ; shift ;;
    *.epub)     EPUB="$1"                               ;;
    *.css)      CSS="${CSS} $1"                         ;;
    *.xhtml | *.html)
                HTML="${HTML} $1"                       ;;
    *.jpg | *.png | *.gif)
                IMAGE="${IMAGE} $1"                     ;;
    *.ttf | *.woff)
                TTF="${TTF} $1"                         ;;
    *)          echo "$0: invalid argument $1" > /dev/stderr
                     usage
                     exit 1 ;;
    esac
    shift
done

if [ -z "$HTML" ] ; then
    echo "$0: No HTML files; aborting" > /dev/stderr
    exit 2
fi
if [ -z "$EPUB" ] ; then
    echo "$0: No EPUB file named; aborting" > /dev/stderr
    exit 2
fi

rm -f ${EPUB}

##################################################

if [ -z "$UUID" ] ; then
    if which uuidgen 2>&1 >/dev/null ; then
        UUID="$(uuidgen)"
    else
        UUID="c5be00f9-932e-4903-8cd9-b4b5939411a6"
    fi
fi

echo -n "application/epub+zip" > mimetype

O="titlepage.xhtml"
> ${O}

{

echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"'
echo '   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'
echo '<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="'${LANG}'" lang="'${LANG}'">'
echo '<head><title>'${TITLE} - ${AUTHOR}'</title></head><body>'

if [ ! -z "${COVER}" ] ; then
    echo '<div><img src="'${COVER}'" alt="cover image" /></div>'
else
    echo '<h1>'${TITLE}'</h1><h2>'${AUTHOR}'</h2>'
fi

echo '</body></html>'
} >> ${O}


mkdir -p META-INF
O="META-INF/container.xml"
>> ${O}

{
echo '<?xml version="1.0"?>'
echo '<container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">'
echo '   <rootfiles>'
echo '      <rootfile full-path="content.opf" media-type="application/oebps-package+xml" />'
echo '   </rootfiles>'
echo '</container>'
} >> ${O}


O=content.opf
>${O}

{
echo '<?xml version="1.0" encoding="utf-8"?>'
echo '<package xmlns="http://www.idpf.org/2007/opf" version="2.0" unique-identifier="uuid_id">'
echo '  <metadata xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:opf="http://www.idpf.org/2007/opf"'
echo '            xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/">'
echo '    <dc:language>'${LANG}'</dc:language>'
echo '    <dc:title>'${TITLE}'</dc:title>'

if [ -z "$FILEAS" ] ; then
    echo '    <dc:creator opf:role="aut">'${AUTHOR}'</dc:creator>'
else
    echo '    <dc:creator opf:role="aut" opf:file-as="'${FILEAS}'">'${AUTHOR}'</dc:creator>'
fi
if [ -n "$CREATOR" ] ; then
    echo '    <dc:contributor opf:role="bkp">'${CREATOR}'</dc:contributor>'
fi
if [ -n "$PUBLISHER" ] ; then
    echo '    <dc:publisher>'${PUBLISHER}'</dc:publisher>'
fi
if [ -n "$TRANSLATOR" ] ; then
    echo '    <dc:contributor opf:role="trl">'${TRANSLATOR}'</dc:contributor>' >> ${O}
fi

for f in ${SUBJECT} ; do
    echo '    <dc:subject>'${SUBJECT}'</dc:subject>'
done

echo '    <dc:identifier id="uuid_id" opf:scheme="uuid">'${UUID}'</dc:identifier>'
echo '    <dc:rights>'${LICENSE}'</dc:rights>'
echo '    <dc:date>'$( date +%Y-%m-%d )'</dc:date>'
echo '  </metadata>'
echo '  <manifest>'

if [ ! -z "$COVER" ] ; then
    echo '    <item href="'${COVER}'" id="cover" media-type="'$( file -b --mime-type ${COVER} )'" />'
fi

echo '    <item href="titlepage.xhtml" id="titlepage.xhtml" media-type="application/xhtml+xml" />'

for f in ${HTML} ; do
    echo '    <item href="'${f}'" id="'$( basename ${f} )'" media-type="application/xhtml+xml" />'
done

for f in ${CSS} ; do
    echo '    <item href="'${f}'" id="'$( basename ${f} )'" media-type="text/css" />'
done

for f in ${IMAGE} ; do
    echo '    <item href="'${f}'" id="'$( basename ${f} )'" media-type="'$( file -b --mime-type ${f} )'" />'
done

for f in ${TTF} ; do
    echo '    <item href="'${f}'" id="'$( basename ${f} )'" media-type="application/octet-stream" />'
done

echo '    <item href="toc.ncx" media-type="application/x-dtbncx+xml" id="ncx" />'
echo '  </manifest>'
echo '  <spine toc="ncx">'

for f in titlepage.xhtml ${HTML} ; do
    echo '    <itemref idref="'$( basename ${f} )'" />'
done

echo '  </spine>'
echo '  <guide>'
echo '    <reference href="titlepage.xhtml" type="cover" title="Cover" />'
echo '  </guide>'
echo '</package>'
} >> ${O}


O=toc.ncx
> ${O}

{
echo '<?xml version="1.0" encoding="utf-8"?>'
echo '<ncx xmlns="http://www.daisy.org/z3986/2005/ncx/" version="2005-1" xml:lang="'${LANG}'">'
echo '  <head>'
echo '    <meta content="'${UUID}'" name="dtb:ui" />'
echo '    <meta content="2" name="dtb:depth" />'
echo '    <meta content="aov-html2epub" name="dtb:generator" />'
echo '    <meta content="0" name="dtb:totalPageCount" />'
echo '    <meta content="0" name="dtb:maxPageNumber" />'
echo '  </head>'
echo '  <docTitle>'
echo '    <text>'${TITLE} - ${AUTHOR}'</text>'
echo '  </docTitle>'
echo '  <navMap>'

ID=1
for f in titlepage.xhtml ${HTML} ; do
    echo '    <navPoint id="'$( basename ${f} )'" playOrder="'${ID}'">'
    echo '      <navLabel><text>'${ID}'</text></navLabel>'
    echo '      <content src="'${f}'" />'
    echo '    </navPoint>'

    let ID++
done

echo '  </navMap>'
echo '</ncx>'
} >> ${O}


FILES="META-INF titlepage.xhtml content.opf toc.ncx"

zip ${EPUB} -X -Z store mimetype
zip ${EPUB} -X -r ${FILES} ${COVER} ${CSS} ${HTML} ${IMAGE} ${TTF}

rm -rf mimetype ${FILES}

exit 0

